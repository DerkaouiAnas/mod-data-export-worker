server.port=8081
server.tomcat.threads.max=100
spring.application.name=mod-data-export-worker

minio.url=${AWS_URL:http://127.0.0.1:9000/}
minio.accessKey=${AWS_ACCESS_KEY_ID:AKIAIOSFODNN7EXAMPLE}
minio.secretKey=${AWS_SECRET_ACCESS_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
minio.workspaceBucketName=${AWS_BUCKET:test-bucket2}

dataSource.driver=org.hsqldb.jdbcDriver
dataSource.jdbcUrl=jdbc:hsqldb:mem:testdb;sql.enforce_strict_size=true;hsqldb.tx=mvcc
dataSource.username=sa
dataSource.password=
#spring.datasource.username=folio_admin
#spring.datasource.password=folio_admin
#spring.datasource.url=jdbc:postgresql://localhost:5433/okapi_modules
#
#dataSource.driver=org.postgresql.Driver
#dataSource.jdbcUrl=jdbc:postgresql://localhost:5433/okapi_modules
#dataSource.username=folio_admin
#dataSource.password=folio_admin

spring.batch.initialize-schema=always
spring.batch.job.enabled=false

spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
spring.kafka.consumer.group-id=jobCommandsCG
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=MANUAL
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.interceptor.classes=org.folio.dew.config.OkapiKafkaInterceptor
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

folio.tenant.validation.enabled=true

spring.liquibase.enabled=true
spring.liquibase.changeLog=classpath:db/changelog/changelog-master.xml
